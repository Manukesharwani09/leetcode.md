137. Single Number II
Solved
Medium
Topics
Companies
Given an integer array nums where every element appears three times except for one, which appears exactly once. Find the single element and return it.

You must implement a solution with a linear runtime complexity and use only constant extra space.

 

Example 1:

Input: nums = [2,2,3,2]
Output: 3
Example 2:

Input: nums = [0,1,0,1,0,1,99]
Output: 99
 

Constraints:

1 <= nums.length <= 3 * 104
-231 <= nums[i] <= 231 - 1
Each element in nums appears exactly three times except for one element which appears once.

solution:
class Solution {
public:
    int singleNumber(vector<int>& nums) {
        int n=nums.size();
        int result=0;
                for (int i = 0; i < 32; i++) {
            int bit_count = 0;
            for (int num : nums) {
                // Check if the ith bit is set
                if (num & (1 << i)) {
                    bit_count++;
                }
            }
            if (bit_count % 3 != 0) {
                result |= (1 << i);
            }
        }
        return result;
        
    }
};