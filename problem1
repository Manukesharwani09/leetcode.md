<!-- 42. Trapping Rain Water
Solved
Hard
Topics
Companies
Given n non-negative integers representing an elevation map where the width of each bar is 1, compute how much water it can trap after raining.

 

Example 1:


Input: height = [0,1,0,2,1,0,1,3,2,1,2,1]
Output: 6
Explanation: The above elevation map (black section) is represented by array [0,1,0,2,1,0,1,3,2,1,2,1]. In this case, 6 units of rain water (blue section) are being trapped.
Example 2:

Input: height = [4,2,0,3,2,5]
Output: 9
 

Constraints:

n == height.length
1 <= n <= 2 * 104
0 <= height[i] <= 105 -->



//codee
class Solution {
public:
// monotonic stackk
    int trap(vector<int>& height) {
        int n=height.size();
        if (n == 0) return 0;
        int unit=0;
        stack <int>st;

        for(int i=0;i<n;i++)
        {
            while(!st.empty() && height[st.top()]<height[i])
            {
                int top = st.top();
                st.pop();
                if (st.empty()) 
                break; // No left boundary
                int distance = i - st.top() - 1;
                int boundedHeight = min(height[i], height[st.top()]) - height[top];
                unit += distance * boundedHeight;
            }
            st.push(i);
        }
        return unit;


       
    }
};

//intuition
similar to rectangular area stack problem....monotonic stack
took help from chatgpt for distance formulaa

